@startuml
!include  https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include  https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

Person_Ext(admin, "Network administrator", "Administrator of networks, cloud infrastructure or both")
System_Ext(ext_auto, "External Automation Systems", "Software systems responsible for automatically provisioning and managing networks, cloud infrastructure, or both")

System_Boundary(nephio, "Nephio") {
    System_Ext(porch, "Porch", "Package Orchestration Server is a k8s extension apiserver which manages the lifecycle of KRM configuration packages")
    System_Boundary(nephio_core, "Nephio Core") {
        Component(cluster_controller, "K8S Cluster Controller", "controller", "Controller responsible for reconciling cluster definitions with running clusters")
        'Component(gitea_controller, "Gitea Controller")
        Component(network_controller, "Network", "controller", "Controller responsible for reconciling Network attachment definitions")
        'Component(resource_backend, "Resource Backend", "controller")
        'Component(token, "Token", "controller", "Controller for handling security tokens")
        'Component(pkg_bootstrap, "Package Bootstrap", "controller", "Controller for bootstrpping onboarded packages")
        Component(repository, "Repository", "controller", "Controller for reconciling repository definitions")
    }

    System_Boundary(k8s_api, "Kubernetes API Server") {
        Component(workload_crds, "Workload CRDs", "Custom Resource Definitions", "Custom resources representing deployed network functions")
        Component(nftopology_crds, "NFTopology CRDs", "Custom Resource Definitions", "Custom resources representing a topology of multiple deployed network functions")
        Component(infra_crds, "Infra CRDs", "Custom Resource Definition", "Custom resources representing infrastructure, such as workload clusters, networks, interfaces, repositories")
    }
    System_Ext(configsync, "ConfigSync", "GitOps service which lets administrators deploy configurations from a source of truth, with the flexibility to support one or many clusters in a hybrid or multi-cloud environment")
    System_Boundary(gitrepomgr, "Git Repository Manager") {
        ContainerDb_Ext(gitrepo, "Git Repository Manager", "git", "System for hosting git repositories and supporting remote branch management and merging")
    }
    System_Ext(oai_controller, "OAI Controller", "")
    System_Ext(free5gc_controller, "Free 5GC controller", "")
}

' Relationships with external users
Rel_D(admin, workload_crds, "Observe workloads")
Rel_D(admin, nftopology_crds, "Observe topologies")
Rel_D(admin, infra_crds, "Observe infrastructure")
Rel_D(ext_auto, workload_crds, "Observe workloads")
Rel_D(ext_auto, nftopology_crds, "Observe topologies")
Rel_D(ext_auto, infra_crds, "Observe infrastructure")

' Relationships between operators and CRDs
Rel_U(cluster_controller, infra_crds, "Reconcile clusters")
Rel_U(network_controller, infra_crds, "Reconcile networks")
Rel_U(repository, infra_crds, "Reconcile repositories")

Rel_U(oai_controller, workload_crds, "Reconcile OAI workloads")
Rel_U(free5gc_controller, workload_crds, "Reconcile Free 5GC workloads")


@enduml
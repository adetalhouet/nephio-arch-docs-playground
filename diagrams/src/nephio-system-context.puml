@startuml
!include  https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include  https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

' External actors
Person_Ext(admin, "Network administrator", "Administrator of networks, cloud infrastructure or both")
System_Ext(core_service_orchestrator, "Core Service Orchestrator", "Core Domain service orchestrator")
System_Ext(oran_service_orchestrator, "O-RAN Service Orchestrator", "RAN domain service orchestrator")
System_Ext(cicd_system, "GitOps / CI / CD Systems", "Continuous integration / continuous delivery platforms verifying workloads and packages before onboarding to Nephio, or using Nephio as part of their operations")

' Core Nephio function
System(nephio, "Nephio", "Kubernetes-based cloud native automation system, supporting deployment and management of multi-vendor cloud infrastructure and network functions across large scale edge deployments")

' Southbound dependencies
System_Ext(supported_nfs, "Supported network functions", "Network functions supported by Nephio (currently free5gc and OAI, with other vendors implementing support independently)")
System_Ext(clouds, "Cloud Providers", "Providers of Kubernetes clusters, such as GCP / Openshift and local kind clusters")

' Actor - nephio relationships
Rel_D(admin, nephio, "Manage NFs, workloads and clusters")
Rel_D(core_service_orchestrator, nephio, "Manage NFs, workloads and clusters")
Rel_D(oran_service_orchestrator, nephio, "Manage NFs, workloads and clusters")

Rel_R(cicd_system, nephio, "Onboard packages and other artefacts, trigger management use cases")

' Nephio - managed entity relationships
Rel_D(nephio, clouds, "Create, configure and manage clusters (e.g. O2IMS)")
Rel_D(nephio, clouds, "Create, configure and manage network function workloads")

Rel_D(nephio, supported_nfs, "Manage Network Functions during runtime")
Rel_D(supported_nfs, clouds, "Execute on cloud infrastructure")

@enduml
